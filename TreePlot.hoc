if (name_declared("pkgversions") != 4 ) {  execute("strdef pkgversions") }
sprint(pkgversions,"%sTreePlot = $Revision: 1.4 $, ",pkgversions)

begintemplate TreePlot

objref graph, xvec, yvec, diamvec, parentsvec
objref tmpxvec, tmpyvec
public plot, lines, marks
public graph, xvec, yvec, diamvec, parentsvec, view, size


proc init() {
    // Allow not to map, similar to Graph object
    if (numarg()== 1) {
        graph = new Graph($1)
    } else {
        graph = new Graph()
    }
    tmpxvec = new Vector(2)
    tmpyvec = new Vector(2)
    colour=1
    lines_flag=1
    marks_flag=0
}

proc plot() { local i
    xvec = $o1
    yvec = $o2
    parentsvec = $o3
    // So that crosshair_action works, do invisible line
    yvec.line(graph,xvec,0,1)
    if (lines_flag) {
        for i=0, xvec.size()-1 { 
            tmpxvec.x(0) = xvec.x(i)
            tmpxvec.x(1) = xvec.x(parentsvec.x(i))
            tmpyvec.x(0) = yvec.x(i)
            tmpyvec.x(1) = yvec.x(parentsvec.x(i))
            tmpyvec.line(graph,tmpxvec,colour,1)
        }
    }
    if (marks_flag) { 
        yvec.mark(graph,xvec,"o",6,colour)
    }
    colour +=1
    if (colour == 10) colour=1
}

// mleft, mbottom, mwidth, mheight, wleft, wtop, wwidth, wheight
proc view() {
    graph.view($1,$2,$3,$4,$5,$6,$7,$8)
}

proc size() {
    graph.size($1,$2,$3,$4)
}

// turn lines on or off
proc lines() {
    lines_flag = $1
}

// turn marks on or off
proc marks() {
    marks_flag = $1
}


endtemplate TreePlot