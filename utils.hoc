//
// setwritepar("parameter_name", parameter_value)
// 
// set parameter of paramater_name to parameter_value and print
// the parameter name and value to the default open file (open with 
// IO-wopen().
// 

strdef utils_tmpstr
proc setwritepar () { 
    sprint(utils_tmpstr, "%s = %g", $s1, $2)
    execute(utils_tmpstr)
    sprint(utils_tmpstr, "fprint(\"%s = %g ;\\n\", %s )", $s1, $2, $s1)
    execute(utils_tmpstr)
}

//
// printfvec(file_handle, vector, "vector_name")
// 
// Print vector to file_handle in matlab format with name vector_name.
// If vector is longer than the local varible chunk_size, it is split 
// into lines of chunk_size elements or less, separated by the matlab line 
// continuation symbol "...".  
// 

proc printfvec () { local i, chunk_size
    chunk_size = 10             // How many figures per line to print
    size = $o2.size()
    $o1.printf("%s = [ ", $s3)
    for i = 0, (size - 1) {
        $o1.printf("%8.2f ", $o2.x(i))
        if ( ( ( i + 1 ) % chunk_size ) == 0 ) {
            $o1.printf(" ...\n") 
        }
    }
    $o1.printf(" ];\n")
}

